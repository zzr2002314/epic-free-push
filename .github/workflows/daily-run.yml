name: Daily Python Run

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  run:
    name: Run Python script
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.3' # 或者 '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up environment variables
        run: |
          echo "${{ secrets.ENV_VARS }}" > .env

      - name: Restore passed.json from gist
        run: |
          python gist.py --restore --token ${{ secrets.GH_TOKEN }} --id ${{ secrets.GIST_ID }} --owner ${{ github.repository_owner }}

      - name: Run main.py
        run: |
          python main.py

      - name: Save passed.json to gist
        run: |
          python gist.py --save --token ${{ secrets.GH_TOKEN }} --id ${{ secrets.GIST_ID }} --owner ${{ github.repository_owner }}

  keepalive-job:
    name: Keepalive Workflow
    if: github.event_name == 'schedule' # 确保只在计划任务触发时运行此 job
    runs-on: ubuntu-latest
    permissions:
      actions: write # 必须，给予 GITHUB_TOKEN 操作其他 workflow 的权限
    steps:
      # 对于 liskin/gh-workflow-keepalive，通常不需要 actions/checkout 步骤
      - name: Workflow Keepalive
        uses: liskin/gh-workflow-keepalive@v1.2.1
        # 注意：这里没有 'with: token:'，因为我们优先尝试使用默认的 GITHUB_TOKEN
        # 如果这种方式长期无效，再考虑配置个人的 PAT (Personal Access Token)
